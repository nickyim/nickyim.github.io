{"ast":null,"code":"var _jsxFileName = \"/Users/nickyim/Documents/jobs/personal-website/src/components/Projects.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Card, Badge } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  projectImage: {\n    width: '100%',\n    // Adjust width as needed\n    height: 'auto',\n    // Maintain aspect ratio\n    maxWidth: '300px' // Set a max width if needed\n  },\n  card: {\n    marginBottom: '20px'\n  }\n};\nconst Projects = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch(endpoints.projects, {\n      method: 'GET'\n    }).then(res => res.json()).then(res => setData(res)).catch(err => err);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: data ? /*#__PURE__*/_jsxDEV(Row, {\n      children: data.projects.map((project, index) => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: styles.card,\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: project.image,\n            style: styles.projectImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: project.bodyText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), project.links.map((link, linkIndex) => /*#__PURE__*/_jsxDEV(Card.Link, {\n              href: link.href,\n              target: \"_blank\",\n              children: link.text\n            }, linkIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: project.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"secondary\",\n                className: \"me-1\",\n                children: tag\n              }, tagIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FallbackSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","Card","Badge","ReactMarkdown","endpoints","FallbackSpinner","jsxDEV","_jsxDEV","styles","projectImage","width","height","maxWidth","card","marginBottom","Projects","_s","data","setData","fetch","projects","method","then","res","json","catch","err","children","map","project","index","md","style","Img","variant","src","image","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","title","Text","bodyText","links","link","linkIndex","Link","href","target","text","tags","tag","tagIndex","bg","className","_c","$RefreshReg$"],"sources":["/Users/nickyim/Documents/jobs/personal-website/src/components/Projects.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Card, Badge } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\n\nconst styles = {\n  projectImage: {\n    width: '100%', // Adjust width as needed\n    height: 'auto', // Maintain aspect ratio\n    maxWidth: '300px', // Set a max width if needed\n  },\n  card: {\n    marginBottom: '20px',\n  },\n};\n\nconst Projects = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.projects, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <Container>\n      {data ? (\n        <Row>\n          {data.projects.map((project, index) => (\n            <Col key={index} md={4}>\n              <Card style={styles.card}>\n                <Card.Img variant=\"top\" src={project.image} style={styles.projectImage} />\n                <Card.Body>\n                  <Card.Title>{project.title}</Card.Title>\n                  <Card.Text>\n                    <ReactMarkdown>{project.bodyText}</ReactMarkdown>\n                  </Card.Text>\n                  {project.links.map((link, linkIndex) => (\n                    <Card.Link key={linkIndex} href={link.href} target=\"_blank\">\n                      {link.text}\n                    </Card.Link>\n                  ))}\n                  <div>\n                    {project.tags.map((tag, tagIndex) => (\n                      <Badge key={tagIndex} bg=\"secondary\" className=\"me-1\">\n                        {tag}\n                      </Badge>\n                    ))}\n                  </div>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </Container>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}